/**
 * StagCopyLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Paginated
 */
class Paginated extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.status = this.constructor.getValue(obj.status);
        this.id = this.constructor.getValue(obj.id || obj._id);
        this.firstName = this.constructor.getValue(obj.firstName || obj.first_name);
        this.lastName = this.constructor.getValue(obj.lastName || obj.last_name);
        this.emailAddr = this.constructor.getValue(obj.emailAddr || obj.email_addr);
        this.hash = this.constructor.getValue(obj.hash);
        this.createdOn = this.constructor.getValue(obj.createdOn || obj.created_on);
        this.modifiedOn = this.constructor.getValue(obj.modifiedOn || obj.modified_on);
        this.v = this.constructor.getValue(obj.v || obj.__v);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'status', realName: 'status' },
            { name: 'id', realName: '_id' },
            { name: 'firstName', realName: 'first_name' },
            { name: 'lastName', realName: 'last_name' },
            { name: 'emailAddr', realName: 'email_addr' },
            { name: 'hash', realName: 'hash' },
            { name: 'createdOn', realName: 'created_on' },
            { name: 'modifiedOn', realName: 'modified_on' },
            { name: 'v', realName: '__v' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Paginated;
